---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: 3scale
  namespace: openshift-gitops
spec:
  project: default
  sources:
    - repoURL: {{ .Values.threeScale.repoURL }}
      targetRevision: {{ .Values.threeScale.targetRevision }}
      path: {{ .Values.threeScale.path }}
      helm:
        valueFiles:
          - $values/3scale/helm-apis-values.yaml
        values: |
          namespace: {{ .Values.threeScale.namespace }}
          operator:
            channel: {{ .Values.threeScale.channel }}
            startingCSV: {{ .Values.threeScale.startingCSV }}
            installPlanApproval: Automatic
          apimanager:
            wildcardDomain: {{ .Values.deployer.domain }}
            tenantName: maas
            llmMetrics:
              name: llm-metrics
              version: 0.1
          patcher:
            routes:
              label_selectors:
              - "zync.3scale.net/route-to=apicast-production"
              annotations:
                haproxy.router.openshift.io/timeout: "180s"
          helper-status-checker:
            approver: true
            checks:
              - operatorName: 3scale-operator
                namespace:
                  name: {{ .Values.threeScale.namespace }}
                syncwave: '1'
                serviceAccount:
                  name: "3scale-status-checker"
          users:
          - name: user1
            password: openshift
            service: granite-3dot2-8b-instruct
          - name: user2
            password: openshift
            service: granite-3dot2-8b-instruct
          - name: user3
            password: openshift
            service: granite-3dot2-8b-instruct
          - name: user9
            password: openshift
            service: granite-3dot2-8b-instruct
    - repoURL: {{ .Values.threeScale.repoURL }}
      targetRevision: {{ .Values.threeScale.targetRevision }}
      ref: values
  destination:
    namespace: {{ .Values.threeScale.namespace }}
    server: https://kubernetes.default.svc
  syncPolicy:
    automated: {}
